from pathlib import Path
from typing import Optional

from rich.console import Console
from rich.panel import Panel
from rich.table import Table
from rich.prompt import Prompt, IntPrompt

from src.config import Config


# Single console instance for the whole app
console = Console()


def display_welcome() -> None:
    """Display welcome screen with application info."""
    console.print(Panel.fit(
        "[bold magenta]–ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä Excel –≤ KML[/bold magenta]\n\n"
        "[dim]–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ Excel —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏ –≤ —Ñ–æ—Ä–º–∞—Ç KML\n"
        "–¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –∫–∞—Ä—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è—Ö[/dim]",
        title="üó∫Ô∏è Excel to KML Converter (RUDI.RU)",
        border_style="bright_blue",
        padding=(1, 2)
    ))


def show_main_menu() -> str:
    """Display main menu and get user choice."""
    menu_table = Table(show_header=False, box=None, padding=(0, 2))
    menu_table.add_column("‚Ññ", style="bold cyan", width=3)
    menu_table.add_column("–û–ø–∏—Å–∞–Ω–∏–µ", style="white")
    menu_table.add_column("–î–µ–π—Å—Ç–≤–∏–µ", style="dim")

    menu_table.add_row(
        "1", "–†–∞–∑–¥–µ–ª–∏—Ç—å —Ñ–∞–π–ª –ø–æ —Ä–µ–≥–∏–æ–Ω–∞–º –∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –≤ KML", "–ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª –æ–±—Ä–∞–±–æ—Ç–∫–∏")
    menu_table.add_row(
        "2", "–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –æ–¥–∏–Ω —Ñ–∞–π–ª .xlsx –≤ .kml", "–ë—ã—Å—Ç—Ä–æ–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ")
    menu_table.add_row(
        "3", "–û—Ç–ª–∞–¥–æ—á–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥ —Å—Ç—Ä–æ–∫ —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏", "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä—Å–µ—Ä–∞")
    menu_table.add_row("4", "–í—ã—Ö–æ–¥", "–ó–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É")

    console.print(Panel(
        menu_table,
        title="üìã –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
        border_style="cyan"
    ))

    return Prompt.ask(
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º",
        choices=["1", "2", "3", "4"],
        show_choices=False
    )


def choose_file(config: Config) -> Optional[str]:
    """Prompt user to choose an Excel file from the input directory using Rich interface."""
    input_dir = Path(config.input_dir)

    # Create input directory if it doesn't exist
    if not input_dir.exists():
        input_dir.mkdir(parents=True, exist_ok=True)
        console.print(Panel(
            f"[yellow]–°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞ '{input_dir}'. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–º–µ—Å—Ç–∏—Ç–µ Excel —Ñ–∞–π–ª—ã –≤ –Ω–µ–µ.[/yellow]",
            title="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è",
            border_style="yellow"
        ))
        return None

    # Find Excel files
    files = list(input_dir.glob("*.xlsx"))

    if not files:
        console.print(Panel(
            f"[bold red]–§–∞–π–ª—ã Excel (.xlsx) –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –ø–∞–ø–∫–µ '{input_dir}'.[/bold red]",
            title="–û—à–∏–±–∫–∞",
            border_style="red"
        ))
        return None

    # Create table with file information
    table = Table(title="–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–∞–π–ª—ã Excel",
                  show_header=True, header_style="bold cyan")
    table.add_column("‚Ññ", style="dim", width=4, justify="center")
    table.add_column("–ò–º—è —Ñ–∞–π–ª–∞", min_width=20)
    table.add_column("–†–∞–∑–º–µ—Ä", justify="right", style="green")
    table.add_column("–î–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è", justify="center", style="blue")

    for i, file_path in enumerate(files, 1):
        size_kb = file_path.stat().st_size / 1024
        size_str = f"{size_kb:.1f} KB" if size_kb < 1024 else f"{size_kb/1024:.1f} MB"
        mod_time = file_path.stat().st_mtime
        import datetime
        mod_date = datetime.datetime.fromtimestamp(
            mod_time).strftime("%Y-%m-%d %H:%M")

        table.add_row(
            str(i),
            file_path.name,
            size_str,
            mod_date
        )

    console.print(table)

    # Get user choice with validation
    try:
        choice = IntPrompt.ask(
            "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä —Ñ–∞–π–ª–∞",
            choices=[str(i) for i in range(1, len(files) + 1)],
            show_choices=False
        )
        return str(files[choice - 1])
    except (KeyboardInterrupt, EOFError):
        console.print("\n[yellow]–í—ã–±–æ—Ä –æ—Ç–º–µ–Ω–µ–Ω.[/yellow]")
        return None


